*SingleComment.nvim.txt*              Comment using only single line comments.

==============================================================================
Table of Contents                       *SingleComment.nvim-table-of-contents*

1. SingleComment.nvim                  |SingleComment.nvim-singlecomment.nvim|
  - Contents                  |SingleComment.nvim-singlecomment.nvim-contents|
  - Features                  |SingleComment.nvim-singlecomment.nvim-features|
  - Installation          |SingleComment.nvim-singlecomment.nvim-installation|
  - Keybindings            |SingleComment.nvim-singlecomment.nvim-keybindings|
  - Lazy load it          |SingleComment.nvim-singlecomment.nvim-lazy-load-it|
  - CommentAhead          |SingleComment.nvim-singlecomment.nvim-commentahead|
  - BlockComment          |SingleComment.nvim-singlecomment.nvim-blockcomment|

==============================================================================
1. SingleComment.nvim                  *SingleComment.nvim-singlecomment.nvim*

Always single line, comment sensitive, indentation preserving commenting.

Turn on notifications in Breaking Changes
<https://github.com/LucasTavaresA/SingleComment.nvim/issues/3> if using this
plugin.


CONTENTS                      *SingleComment.nvim-singlecomment.nvim-contents*


- |SingleComment.nvim-features|
- |SingleComment.nvim-installation|
- |SingleComment.nvim-keybindings|
- |SingleComment.nvim-lazy-load-it| **Quickstart**


FEATURES                      *SingleComment.nvim-singlecomment.nvim-features*


1. Supports


- counts like 5{comment} and dotrepeat
- commenting in front of the current line, and start a comment on empty lines
- toggling a comment in front/top of the current line, |SingleComment.nvim-preview|
- block comments in case you really need them, and removing innermost block on cursor,
    |SingleComment.nvim-preview|

2. Simplest of them all **~270 loc** in a single file

3. Compatible with nvim-ts-context-commentstring
<https://github.com/JoosepAlviste/nvim-ts-context-commentstring>, turns its
results into single line comments

4. Single line comments avoid unexpected results when commenting:


- uncomments only when all the text selected is commented, avoiding confusion
    when getting big blocks of code out of the way for debugging
- always comments at the most shallow comment to make maintaining different levels of
    commented code easier
- when you have block comments at the end of lines other plugins fail on
    the simple task of getting this line out of the way, this plugin should **never** fail




INSTALLATION              *SingleComment.nvim-singlecomment.nvim-installation*

packer.nvim <https://github.com/wbthomason/packer.nvim>:

>lua
    use {
      "lucastavaresa/SingleComment.nvim",
    }
<

lazy.nvim <https://github.com/folke/lazy.nvim>:

>lua
    {
      "lucastavaresa/SingleComment.nvim",
    }
<


KEYBINDINGS                *SingleComment.nvim-singlecomment.nvim-keybindings*

There is no keybindings by default.

Those are all the available functions:

>lua
    -- comments the current line, or a number of lines 5gcc
    vim.keymap.set("n", "gcc", require("SingleComment").SingleComment, { expr = true })
    -- comments the selected lines
    vim.keymap.set("v", "gcc", require("SingleComment").Comment, {})
    -- toggle a comment top/ahead of the current line
    vim.keymap.set("n", "gca", require("SingleComment").ToggleCommentAhead, {})
    -- comments ahead of the current line
    vim.keymap.set("n", "gcA", require("SingleComment").CommentAhead, {})
    -- comment a block, and removes the innermost block comment in normal mode
    vim.keymap.set({ "n", "v" }, "gcb", require("SingleComment").BlockComment)
<


LAZY LOAD IT              *SingleComment.nvim-singlecomment.nvim-lazy-load-it*

Those commands substitute all the above


- with packer **i did not test this, please inform me if it works** :)

>lua
      use {
        "lucastavaresa/SingleComment.nvim",
        opt = true,
        keybindings = { { { "n", "v" }, "gcc" }, { "n", "gca" } },
        requires = {
          "nvim-treesitter/nvim-treesitter",
          "JoosepAlviste/nvim-ts-context-commentstring"
        },
        setup = function()
          vim.keymap.set(
            "n",
            "gcc",
            require("SingleComment").SingleComment,
            { expr = true }
          )
          vim.keymap.set("v", "gcc", require("SingleComment").Comment, {})
          vim.keymap.set("n", "gca", require("SingleComment").ToggleCommentAhead, {})
          vim.keymap.set("n", "gcA", require("SingleComment").CommentAhead, {})
          vim.keymap.set({ "n", "v" }, "gcb", require("SingleComment").BlockComment)
        end
      }
<


- with lazy:

>lua
      {
        "lucastavaresa/SingleComment.nvim",
        lazy = true,
        dependencies = {
          "nvim-treesitter/nvim-treesitter",
          "JoosepAlviste/nvim-ts-context-commentstring"
        },
        init = function()
          vim.keymap.set("n", "gcc", require("SingleComment").SingleComment, { expr = true })
          vim.keymap.set("v", "gcc", require("SingleComment").Comment, {})
          vim.keymap.set("n", "gca", require("SingleComment").ToggleCommentAhead, {})
          vim.keymap.set("n", "gcA", require("SingleComment").CommentAhead, {})
          vim.keymap.set({ "n", "v" }, "gcb", require("SingleComment").BlockComment)
        end,
      },
<


COMMENTAHEAD              *SingleComment.nvim-singlecomment.nvim-commentahead*

<https://asciinema.org/a/jChjT4OZBaj7WsKWsAWiKsI3F>


BLOCKCOMMENT              *SingleComment.nvim-singlecomment.nvim-blockcomment*

<https://asciinema.org/a/2VtZyh0Q3Nb5Eytwo0RSp5c2G>

==============================================================================
2. Links                                            *SingleComment.nvim-links*

1. *asciicast*: https://asciinema.org/a/jChjT4OZBaj7WsKWsAWiKsI3F.svg
2. *asciicast*: https://asciinema.org/a/2VtZyh0Q3Nb5Eytwo0RSp5c2G.svg

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
